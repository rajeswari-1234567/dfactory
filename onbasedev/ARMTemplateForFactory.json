{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "onbasedev"
		},
		"OnPremSqlDataBase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnPremSqlDataBase'"
		},
		"ls_datalakestorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_datalakestorage'"
		},
		"ls_sqldb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sqldb'"
		},
		"ls_datalakestorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://onbasedevstorage.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/L_Get_TableNames')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "select* from information_schema.tables where table_type = 'base table'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_Sql_Source_InputTableName",
								"type": "DatasetReference",
								"parameters": {
									"DSP_SchemaName": {
										"value": "dbo",
										"type": "Expression"
									},
									"DSP_TableName": {
										"value": "categories",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T22:38:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Sql_Source_InputTableName')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadHourlyAndDailyData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set filetype",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filetype",
							"value": {
								"value": "@replace(pipeline().parameters.filename,'sales','' )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set filetype",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('filetype'),'hourly')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DelimitedText1_source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SqlServerTable1_sink",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copydatatohourlytable",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Source",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Sqlserverhourly",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"variables": {
					"filetype": {
						"type": "String"
					}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-23T01:10:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1_source')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1_sink')]",
				"[concat(variables('factoryId'), '/datasets/DS_Source')]",
				"[concat(variables('factoryId'), '/datasets/DS_Sqlserverhourly')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EXCEL_TO_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FE_Excel_To_SQL",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('SheetName')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "C_Excel_To_SQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Excel",
											"type": "DatasetReference",
											"parameters": {
												"SheetName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ExcelSQL",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "dbo",
												"TableName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"SheetName": {
						"type": "Array",
						"defaultValue": [
							"Sheet5",
							"Sheet6",
							"Sheet7",
							"Sheet8"
						]
					}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-16T23:46:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Excel')]",
				"[concat(variables('factoryId'), '/datasets/DS_ExcelSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_GetFolderNames')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "G_FolderName",
						"type": "GetMetadata",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "L_FolderData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Excel_Source_InputFolderName",
								"type": "DatasetReference",
								"parameters": {
									"DSP_FileSystem": {
										"value": "@pipeline().parameters.PLP_FileSystem",
										"type": "Expression"
									},
									"DSP_Directory": {
										"value": "@pipeline().parameters.PLP_Directory",
										"type": "Expression"
									},
									"DSP_FileName": {
										"value": "@pipeline().parameters.PLP_FileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "L_FolderData",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_Excel_Source_InputFolderName",
								"type": "DatasetReference",
								"parameters": {
									"DSP_FileSystem": {
										"value": "@pipeline().parameters.PLP_FileSystem",
										"type": "Expression"
									},
									"DSP_Directory": {
										"value": "@pipeline().parameters.PLP_Directory",
										"type": "Expression"
									},
									"DSP_FileName": {
										"value": "@pipeline().parameters.PLP_FileName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"PLP_FileSystem": {
						"type": "string",
						"defaultValue": "onbasepractice"
					},
					"PLP_Directory": {
						"type": "string"
					},
					"PLP_FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T22:38:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Excel_Source_InputFolderName')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_GetMetaData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"size",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-26T18:31:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_Practice1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Practice1",
								"type": "DatasetReference",
								"parameters": {
									"DSP_filesystem": {
										"value": "onbasepractice",
										"type": "Expression"
									},
									"DSP_directory": {
										"value": "Order_Items",
										"type": "Expression"
									},
									"DSP_filename": {
										"value": "@activity('Get Metadata1').output.itemName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Practice1",
								"type": "DatasetReference",
								"parameters": {
									"DSP_filesystem": {
										"value": "onbasepractice",
										"type": "Expression"
									},
									"DSP_directory": {
										"value": "ram",
										"type": "Expression"
									},
									"DSP_filename": {
										"value": "@concat(substring(activity('Get Metadata1').output.itemName,0,indexOf(activity('Get Metadata1').output.itemName, '_')),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Practice1",
								"type": "DatasetReference",
								"parameters": {
									"DSP_filesystem": "onbasepractice",
									"DSP_directory": "Order_Items",
									"DSP_filename": {
										"value": "Order_Items.csv",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-12T18:32:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Practice1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_Practice2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Practice2",
								"type": "DatasetReference",
								"parameters": {
									"DSP_Filesystem": "onbasepractice",
									"DSP_Directory": "ram",
									"DSP_FileName": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"batchCount": 6,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Practice2",
											"type": "DatasetReference",
											"parameters": {
												"DSP_Filesystem": {
													"value": "onbasepractice",
													"type": "Expression"
												},
												"DSP_Directory": "ram",
												"DSP_FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Practice2",
											"type": "DatasetReference",
											"parameters": {
												"DSP_Filesystem": {
													"value": "onbasepractice",
													"type": "Expression"
												},
												"DSP_Directory": "sai",
												"DSP_FileName": {
													"value": "@concat(substring(item().name,0,indexOf(item().name,'.csv')), formatDateTime(utcnow(), 'yyyy-dd-MM'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-15T21:36:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Practice2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_Practice3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Practice2",
								"type": "DatasetReference",
								"parameters": {
									"DSP_Filesystem": "onbasepractice",
									"DSP_Directory": "sai",
									"DSP_FileName": {
										"value": "*",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems\n\n",
								"type": "Expression"
							},
							"batchCount": 5,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Practice2",
											"type": "DatasetReference",
											"parameters": {
												"DSP_Filesystem": {
													"value": "onbasepractice",
													"type": "Expression"
												},
												"DSP_Directory": {
													"value": "sai",
													"type": "Expression"
												},
												"DSP_FileName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Practice2",
											"type": "DatasetReference",
											"parameters": {
												"DSP_Filesystem": {
													"value": "onbasepractice",
													"type": "Expression"
												},
												"DSP_Directory": {
													"value": "ram",
													"type": "Expression"
												},
												"DSP_FileName": {
													"value": "@concat(substring(item().name,0,indexOf(item().name,'2024-15-04.csv')),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-15T22:13:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Practice2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_Practice4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Practice4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SqlServer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-16T22:47:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Practice4')]",
				"[concat(variables('factoryId'), '/datasets/DS_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_Practice5_deleteactivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "filesdeleted",
								"value": "all txt files in claims folder of onbasepractice container"
							}
						],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_delete",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ls_datalakestorage",
									"type": "LinkedServiceReference"
								},
								"path": "onbasepractice"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-18T19:45:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_delete')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_Practice6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_ZIP",
								"type": "DatasetReference",
								"parameters": {
									"DS_Filesystem": "onbasepractice",
									"DS_Directory": "raji",
									"DS_Filename": "*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings",
												"compressionProperties": {
													"type": "ZipDeflateReadSettings",
													"preserveZipFileNameAsFolder": false
												}
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ZIP",
											"type": "DatasetReference",
											"parameters": {
												"DS_Filesystem": "onbasepractice",
												"DS_Directory": "raji",
												"DS_Filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Zip_sink",
											"type": "DatasetReference",
											"parameters": {
												"DSP_Filesystem": {
													"value": "onbasepractice",
													"type": "Expression"
												},
												"DSP_Directory": {
													"value": "sai",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-19T17:08:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ZIP')]",
				"[concat(variables('factoryId'), '/datasets/DS_Zip_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P_Switch_Activty')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.foldername",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "output1",
									"activities": [
										{
											"name": "Copy data1",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "BinarySource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true
													},
													"formatSettings": {
														"type": "BinaryReadSettings"
													}
												},
												"sink": {
													"type": "BinarySink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "Source_DS",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "Sink_DS",
													"type": "DatasetReference",
													"parameters": {
														"folder": {
															"value": "@pipeline().parameters.foldername",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "output2",
									"activities": [
										{
											"name": "Copy data2",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "BinarySource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true
													},
													"formatSettings": {
														"type": "BinaryReadSettings"
													}
												},
												"sink": {
													"type": "BinarySink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													}
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "Source_DS",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "Sink_DS",
													"type": "DatasetReference",
													"parameters": {
														"folder": {
															"value": "@pipeline().parameters.foldername",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"foldername": {
						"type": "string",
						"defaultValue": "output1"
					}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-30T02:00:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Source_DS')]",
				"[concat(variables('factoryId'), '/datasets/Sink_DS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/child_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 3
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "part1"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T00:23:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/it_cn_server')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_Sqlserver_InputTable",
								"type": "DatasetReference",
								"parameters": {
									"DSP_Input_Schema": {
										"value": "@pipeline().parameters.P_InputSchema",
										"type": "Expression"
									},
									"DSP_Input_Table": {
										"value": "@pipeline().parameters.P_InputTableName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_InputSchema": {
						"type": "string"
					},
					"P_InputTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T18:57:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Sqlserver_InputTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/iteration_and_conditionals')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"description": "",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select* from information_schema.tables where table_type = 'base table'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqldb",
								"type": "DatasetReference",
								"parameters": {
									"sourceschema": {
										"value": "@pipeline().parameters.InputSchema",
										"type": "Expression"
									},
									"sourcetable": {
										"value": "@pipeline().parameters.InputTableName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@not(equals(item().TABLE_SCHEMA,'dbo'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@{item().TABLE_NAME}",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "departments",
												"activities": [
													{
														"name": "Script1",
														"type": "Script",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"linkedServiceName": {
															"referenceName": "ls_sqldb",
															"type": "LinkedServiceReference"
														},
														"typeProperties": {
															"scripts": [
																{
																	"type": "Query",
																	"text": {
																		"value": "select count(*) as rec_count from @{item().TABLE_SCHEMA}.@{item().TABLE_NAME}",
																		"type": "Expression"
																	}
																}
															],
															"scriptBlockExecutionTimeout": "02:00:00"
														}
													}
												]
											},
											{
												"value": "lab_tests",
												"activities": [
													{
														"name": "Script1_copy1",
														"type": "Script",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"linkedServiceName": {
															"referenceName": "ls_sqldb",
															"type": "LinkedServiceReference"
														},
														"typeProperties": {
															"scripts": [
																{
																	"type": "Query",
																	"text": {
																		"value": "select count(*) as rec_count from @{item().TABLE_SCHEMA}.@{item().TABLE_NAME}",
																		"type": "Expression"
																	}
																}
															],
															"scriptBlockExecutionTimeout": "02:00:00"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"InputSchema": {
						"type": "string"
					},
					"InputTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "part1"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T00:23:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lookup_vs_getmetadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadCommitted",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"columnCount",
								"exists",
								"structure"
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "part1"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T00:23:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/new_pipeline_in_sqlserver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select* from information_schema.tables where table_type = 'base table'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_Sqlserver_InputTable",
								"type": "DatasetReference",
								"parameters": {
									"DSP_Input_Schema": {
										"value": "@pipeline().parameters.P_InputSchema",
										"type": "Expression"
									},
									"DSP_Input_Table": {
										"value": "@pipeline().parameters.P_InputTableName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_Sqlserver_InputTable",
											"type": "DatasetReference",
											"parameters": {
												"DSP_Input_Schema": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"DSP_Input_Table": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_datalakestorage",
											"type": "DatasetReference",
											"parameters": {
												"folderpath": "@item().TABLE_NAME",
												"filename": "@{item().TABLE_NAME}.csv"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_InputSchema": {
						"type": "string"
					},
					"P_InputTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-16T21:26:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_Sqlserver_InputTable')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/p_sqldb_storageaccount')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "copying data from SQL dB to storage account",
				"activities": [
					{
						"name": "Lookup1",
						"description": "",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select* from information_schema.tables where table_type = 'base table'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqldb",
								"type": "DatasetReference",
								"parameters": {
									"sourceschema": {
										"value": "@pipeline().parameters.InputSchema",
										"type": "Expression"
									},
									"sourcetable": {
										"value": "@pipeline().parameters.InputTableName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"batchCount": 3,
							"activities": [
								{
									"name": "employee_filecopy",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_sqldb",
											"type": "DatasetReference",
											"parameters": {
												"sourceschema": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"sourcetable": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_datalakestorage",
											"type": "DatasetReference",
											"parameters": {
												"folderpath": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												},
												"filename": {
													"value": "@{item().TABLE_NAME}.csv",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"InputSchema": {
						"type": "string"
					},
					"InputTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "part1"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T00:23:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parameters_and_variables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"description": "",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select* from information_schema.tables where table_type = '@{pipeline().parameters.Table_Type}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqldb",
								"type": "DatasetReference",
								"parameters": {
									"sourceschema": {
										"value": "@pipeline().parameters.Table_Type",
										"type": "Expression"
									},
									"sourcetable": {
										"value": "@pipeline().parameters.Table_Type",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Table_Type": {
						"type": "string"
					}
				},
				"folder": {
					"name": "part1"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T00:23:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parent_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "call_child_pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "child_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Lookup1",
						"description": "",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "call_child_pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select* from information_schema.tables where table_type = 'base table'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sqldb",
								"type": "DatasetReference",
								"parameters": {
									"sourceschema": {
										"value": "@pipeline().parameters.InputSchema",
										"type": "Expression"
									},
									"sourcetable": {
										"value": "@pipeline().parameters.InputTableName",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"InputSchema": {
						"type": "string"
					},
					"InputTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "part1"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-11T00:23:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/child_pipeline')]",
				"[concat(variables('factoryId'), '/datasets/ds_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Excel1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DS_Filesystem": {
						"type": "string",
						"defaultValue": "onbasepractice"
					},
					"DS_FileName": {
						"type": "string",
						"defaultValue": "SampleExcelSpreadSheet.xls"
					}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-16T21:26:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Excel1')]",
				"[concat(variables('factoryId'), '/datasets/DS_DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "p_sqldb_storageaccount",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"InputSchema": {
									"value": "@pipeline().parameters.InputSchema",
									"type": "Expression"
								},
								"InputTableName": {
									"value": "@pipeline().parameters.InputTableName",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"InputSchema": {
						"type": "string"
					},
					"InputTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-23T17:52:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/p_sqldb_storageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "https://dummy.restapiexample.com/api/v1/create",
								"type": "Expression"
							},
							"body": {
								"value": "{\"name\":\"test\",\"salary\":\"123\",\"age\":\"23\"}",
								"type": "Expression"
							},
							"authentication": {
								"type": "Basic",
								"username": "sa",
								"password": {
									"type": "SecureString",
									"value": "**********"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-29T22:59:15Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/renaming_file')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get_FileName",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_datalakestorage",
								"type": "DatasetReference",
								"parameters": {
									"folderpath": {
										"value": "@pipeline().parameters.P_folderpath",
										"type": "Expression"
									},
									"filename": {
										"value": "@pipeline().parameters.P_foldername",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_FileName').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "GetFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_datalakestorage",
											"type": "DatasetReference",
											"parameters": {
												"folderpath": {
													"value": "@item().name",
													"type": "Expression"
												},
												"filename": {
													"value": "@activity('GetFile').output.childItems[0].name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_datalakestorage",
											"type": "DatasetReference",
											"parameters": {
												"folderpath": "sai",
												"filename": {
													"value": "@concat(replace(activity('GetFile').output.childItems[0].name,'.csv','_'),formatDateTime(utcNow(),'yyyymmdd'),'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "GetFile",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_datalakestorage",
											"type": "DatasetReference",
											"parameters": {
												"folderpath": "@item().name",
												"filename": "*"
											}
										},
										"fieldList": [
											"childItems",
											"itemName"
										],
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"P_folderpath": {
						"type": "string"
					},
					"P_foldername": {
						"type": "string",
						"defaultValue": "*"
					}
				},
				"folder": {
					"name": "on_prem_sql_server"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-16T21:26:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "intcolumn",
						"type": "int",
						"precision": 10
					},
					{
						"name": "bigintcolumn",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "smallintcolumn",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "tinyintcolumn",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "decimalcolumn",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "numericcolumn",
						"type": "decimal",
						"precision": 8,
						"scale": 4
					},
					{
						"name": "floatcolumn",
						"type": "float",
						"precision": 15
					},
					{
						"name": "realcolumn",
						"type": "real",
						"precision": 7
					},
					{
						"name": "datecolumn",
						"type": "date"
					},
					{
						"name": "datetimecolumn",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "timecolumn",
						"type": "time",
						"scale": 7
					},
					{
						"name": "charcolumn",
						"type": "char"
					},
					{
						"name": "vcharcolumn",
						"type": "varchar"
					},
					{
						"name": "textcolumn",
						"type": "text"
					},
					{
						"name": "ncharcolumn",
						"type": "nchar"
					},
					{
						"name": "nvcharcolumn",
						"type": "nvarchar"
					},
					{
						"name": "ntextcolumn",
						"type": "ntext"
					},
					{
						"name": "bitcolumn",
						"type": "bit"
					},
					{
						"name": "binarycolumn",
						"type": "binary"
					},
					{
						"name": "vbinarycolumn",
						"type": "varbinary"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "medical_records"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dailysales.csv",
						"folderPath": "dailyfiles",
						"fileSystem": "onbasepractice"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SampleExcelSpreadSheet.xls",
						"folderPath": {
							"value": "raji",
							"type": "Expression"
						},
						"fileSystem": "onbasepractice"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "��\u0011ࡱ\u001a�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0003\u0000��\t\u0000\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000P\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0010\u0000\u0000����\u0000\u0000\u0000\u0000����\u0000\u0000\u0000\u0000O\u0000\u0000\u0000������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������\t\b\u0010\u0000\u0000\u0006\u0005\u0000ZO�\u0007�\u0000\u0002\u0000\u0006\b\u0000\u0000�\u0000\u0002\u0000�\u0004�\u0000\u0002\u0000\u0000\u0000�\u0000\u0000\u0000\\\u0000p\u0000\u0012\u0000\u0000raji Chalamalsetty                                                                                           B\u0000\u0002\u0000�\u0004a\u0001\u0002\u0000\u0000\u0000�\u0001\u0000\u0000=\u0001\b\u0000\u0001\u0000\t\u0000",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SheetName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().SheetName",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SampleExcelSpreadSheet (1).xlsx",
						"folderPath": "raji",
						"fileSystem": "onbasepractice"
					},
					"firstRowAsHeader": false
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "SampleExcelSpreadSheet.xls",
						"fileSystem": "onbasepractice"
					}
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ExcelSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremSqlDataBase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremSqlDataBase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Excel_Source_InputFolderName')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DSP_FileSystem": {
						"type": "string"
					},
					"DSP_Directory": {
						"type": "string"
					},
					"DSP_FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().DSP_FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().DSP_Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().DSP_FileSystem",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Practice1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DSP_filesystem": {
						"type": "string"
					},
					"DSP_directory": {
						"type": "string"
					},
					"DSP_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().DSP_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().DSP_directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().DSP_filesystem",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Practice2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DSP_Filesystem": {
						"type": "string"
					},
					"DSP_Directory": {
						"type": "string"
					},
					"DSP_FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().DSP_FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().DSP_Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().DSP_Filesystem",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Practice4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "SampleExcelSpreadSheet.xls",
							"type": "Expression"
						},
						"folderPath": {
							"value": "raji",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "onbasepractice",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Prop_0",
						"type": "String"
					},
					{
						"name": "Prop_1",
						"type": "String"
					},
					{
						"name": "Prop_2",
						"type": "String"
					},
					{
						"name": "Prop_3",
						"type": "String"
					},
					{
						"name": "Prop_4",
						"type": "String"
					},
					{
						"name": "Prop_5",
						"type": "String"
					},
					{
						"name": "Prop_6",
						"type": "String"
					},
					{
						"name": "Prop_7",
						"type": "String"
					},
					{
						"name": "Prop_8",
						"type": "String"
					},
					{
						"name": "Prop_9",
						"type": "String"
					},
					{
						"name": "Prop_10",
						"type": "String"
					},
					{
						"name": "Prop_11",
						"type": "String"
					},
					{
						"name": "Prop_12",
						"type": "String"
					},
					{
						"name": "Prop_13",
						"type": "String"
					},
					{
						"name": "Prop_14",
						"type": "String"
					},
					{
						"name": "Prop_15",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hourlysales.csv",
						"folderPath": "hourlyfiles",
						"fileSystem": "onbasepractice"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "PK\u0003\u0004\u0014\u0000\u0000\u0000\b\u0000�Y�X*�\u0014��\b\u0000��\t\u0000\u0019\u0000\u0000\u0000KLMRoyalDutchAirlines.pdf�Y\t8�k�\u001f�� �-�!$1��\b���K���x0��93C��t���(�",
						"type": "String"
					},
					{
						"name": "�\"��PI�\"�i;\u0011eI�4$K��\u0019��y�w����������\\����}�����?��~Fˁl���c�Z�\u0007\u0007��(\u0018\u0012Ƥ\u0006@��\u0010�l��e�a:��\u001d� ",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremSqlDataBase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "dbo",
						"type": "Expression"
					},
					"table": {
						"value": "Users",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremSqlDataBase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Sql_Source_InputTableName')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremSqlDataBase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DSP_SchemaName": {
						"type": "string"
					},
					"DSP_TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremSqlDataBase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Sqlserverhourly')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremSqlDataBase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "hourly"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremSqlDataBase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ZIP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DS_Filesystem": {
						"type": "string"
					},
					"DS_Directory": {
						"type": "string"
					},
					"DS_Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().DS_Filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().DS_Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().DS_Filesystem",
							"type": "Expression"
						}
					},
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Zip_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DSP_Filesystem": {
						"type": "string"
					},
					"DSP_Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().DSP_Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().DSP_Filesystem",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_delete')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "claims.csv",
						"folderPath": "claims",
						"fileSystem": "onbasepractice"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dailysales.csv",
						"folderPath": "dailyfiles",
						"fileSystem": "onbasepractice"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "%PDF-1.4",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sink_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": "onbasepractice"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dailysales.csv",
						"folderPath": "dailyfiles",
						"fileSystem": "onbasepractice"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremSqlDataBase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "daily"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremSqlDataBase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_Sqlserver_InputTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPremSqlDataBase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"DSP_Input_Schema": {
						"type": "string"
					},
					"DSP_Input_Table": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Product_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "Price",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().DSP_Input_Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().DSP_Input_Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPremSqlDataBase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalakestorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalakestorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderpath": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folderpath",
							"type": "Expression"
						},
						"fileSystem": "onbasepractice"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalakestorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sqldb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "brings data from employees table in sql data base to storage account",
				"linkedServiceName": {
					"referenceName": "ls_sqldb",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sourceschema": {
						"type": "string"
					},
					"sourcetable": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().sourceschema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().sourcetable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremSqlDataBase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('OnPremSqlDataBase_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SHIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SHIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalakestorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalakestorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_datalakestorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "brings data from sql db to storage account",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sqldb_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SHIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"selfContainedInteractiveAuthoringEnabled": true
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_datalakestorage",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_datalakestorage",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_datalakestorage')]"
			]
		}
	]
}